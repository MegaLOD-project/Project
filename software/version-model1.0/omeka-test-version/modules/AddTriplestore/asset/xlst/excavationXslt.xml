<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:excav="https://purl.org/megalod/ms/excavation/"
    xmlns:dct="http://purl.org/dc/terms/"
    xmlns:dcterms="http://purl.org/dc/terms/"
    xmlns:foaf="http://xmlns.com/foaf/0.1/"
    xmlns:dbo="http://dbpedia.org/ontology/"
    xmlns:dul="http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#"
    xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
    xmlns:time="http://www.w3.org/2006/time#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#">

    <xsl:output method="xml" indent="yes" encoding="UTF-8"/>
    
    <xsl:template match="/">
        <rdf:RDF>
            <xsl:apply-templates select="//excavation"/>
        </rdf:RDF>
    </xsl:template>
    
    <xsl:template match="excavation">
        <xsl:variable name="excavationId" select="@id"/>
        <xsl:variable name="excavationIdentifier" select="identifier"/>
        
        <!-- FIXED: Use excavationIdentifier for the URI, not excavationId -->
        <xsl:variable name="baseUri" select="'https://purl.org/megalod'"/>
        <xsl:variable name="excavationUri" select="concat($baseUri, '/excavation/', $excavationIdentifier)"/>
        
        <!-- Main Excavation -->
        <rdf:Description rdf:about="{$excavationUri}">
            <rdf:type rdf:resource="https://purl.org/megalod/ms/excavation/Excavation"/>
            
            <!-- Identifier -->
            <dcterms:identifier rdf:datatype="http://www.w3.org/2001/XMLSchema#literal">
                <xsl:value-of select="$excavationIdentifier"/>
            </dcterms:identifier>
            
            <!-- Location -->
            <xsl:if test="location">
                <dul:hasLocation rdf:resource="{concat($baseUri,  '/location/', location/@id)}"/>
            </xsl:if>
            
            <!-- Person in Charge -->
            <xsl:if test="archaeologist">
                <excav:hasPersonInCharge rdf:resource="{concat($baseUri,  '/archaeologist/', archaeologist/@id)}"/>
            </xsl:if>
            
            <!-- Squares -->
            <xsl:for-each select="squares/square">
                <excav:hasSquare rdf:resource="{concat($baseUri,  '/square/', @id)}"/>
            </xsl:for-each>
            
            <!-- Contexts -->
            <xsl:for-each select="contexts/context">
                <excav:hasContext rdf:resource="{concat($baseUri,  '/context/', @id)}"/>
            </xsl:for-each>
        </rdf:Description>
        
        <!-- Location -->
        <xsl:if test="location">
            <rdf:Description rdf:about="{concat($baseUri,  '/location/', location/@id)}">
                <rdf:type rdf:resource="https://purl.org/megalod/ms/excavation/Location"/>
                
                <xsl:if test="location/name">
                    <dbo:informationName rdf:datatype="http://www.w3.org/2001/XMLSchema#literal">
                        <xsl:value-of select="location/name"/>
                    </dbo:informationName>
                </xsl:if>
                
                <xsl:if test="location/district">
                    <dbo:district rdf:resource="{concat('http://dbpedia.org/resource/', translate(location/district, ' ', '_'))}"/>
                </xsl:if>
                
                <xsl:if test="location/parish">
                    <dbo:parish rdf:resource="{concat('http://dbpedia.org/resource/', translate(location/parish, ' ', '_'))}"/>
                </xsl:if>
                
                <xsl:if test="location/country">
                    <dbo:Country rdf:resource="{concat('http://dbpedia.org/resource/', translate(location/country, ' ', '_'))}"/>
                </xsl:if>
                
                <xsl:if test="location/gpsCoordinates">
                    <excav:hasGPSCoordinates rdf:resource="{concat($baseUri,  '/gps/', location/@id, '-gps')}"/>
                </xsl:if>
            </rdf:Description>
        </xsl:if>
        
        <!-- GPS Coordinates -->
        <xsl:if test="location/gpsCoordinates">
            <rdf:Description rdf:about="{concat($baseUri,  '/gps/', location/@id, '-gps')}">
                <rdf:type rdf:resource="https://purl.org/megalod/ms/excavation/GPSCoordinates"/>
                <geo:lat rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">
                    <xsl:value-of select="location/gpsCoordinates/latitude"/>
                </geo:lat>
                <geo:long rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">
                    <xsl:value-of select="location/gpsCoordinates/longitude"/>
                </geo:long>
            </rdf:Description>
        </xsl:if>
        
        <!-- District Type Declaration -->
        <xsl:if test="location/district">
            <rdf:Description rdf:about="{concat('http://dbpedia.org/resource/', translate(location/district, ' ', '_'))}">
                <rdf:type rdf:resource="http://dbpedia.org/ontology/District"/>
            </rdf:Description>
        </xsl:if>
        
        <!-- Parish Type Declaration -->
        <xsl:if test="location/parish">
            <rdf:Description rdf:about="{concat('http://dbpedia.org/resource/', translate(location/parish, ' ', '_'))}">
                <rdf:type rdf:resource="http://dbpedia.org/ontology/Parish"/>
            </rdf:Description>
        </xsl:if>
        
        <!-- Archaeologist -->
        <xsl:if test="archaeologist">
            <rdf:Description rdf:about="{concat($baseUri,  '/archaeologist/', archaeologist/@id)}">
                <rdf:type rdf:resource="https://purl.org/megalod/ms/excavation/Archaeologist"/>
                
                <xsl:if test="archaeologist/orcid">
                    <foaf:account rdf:resource="{archaeologist/orcid}"/>
                </xsl:if>
                
                <xsl:if test="archaeologist/name">
                    <foaf:name rdf:datatype="http://www.w3.org/2001/XMLSchema#literal">
                        <xsl:value-of select="archaeologist/name"/>
                    </foaf:name>
                </xsl:if>
                
                <xsl:for-each select="archaeologist/emails/email">
                    <foaf:mbox rdf:resource="{.}"/>
                </xsl:for-each>
            </rdf:Description>
        </xsl:if>
        
        <!-- Squares -->
        <xsl:for-each select="squares/square">
            <rdf:Description rdf:about="{concat($baseUri,  '/square/', @id)}">
                <rdf:type rdf:resource="https://purl.org/megalod/ms/excavation/Square"/>
                
                <dcterms:identifier rdf:datatype="http://www.w3.org/2001/XMLSchema#literal">
                    <xsl:value-of select="@id"/>
                </dcterms:identifier>
                
                <xsl:if test="northSouth">
                    <geo:long rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">
                        <xsl:value-of select="northSouth"/>
                    </geo:long>
                </xsl:if>
                
                <xsl:if test="eastWest">
                    <geo:lat rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">
                        <xsl:value-of select="eastWest"/>
                    </geo:lat>
                </xsl:if>
            </rdf:Description>
        </xsl:for-each>
        
        <!-- Contexts -->
        <xsl:for-each select="contexts/context">
            <rdf:Description rdf:about="{concat($baseUri,  '/context/', @id)}">
                <rdf:type rdf:resource="https://purl.org/megalod/ms/excavation/Context"/>
                
                <dcterms:identifier rdf:datatype="http://www.w3.org/2001/XMLSchema#literal">
                    <xsl:value-of select="@id"/>
                </dcterms:identifier>
                
                <xsl:if test="description">
                    <dcterms:description rdf:datatype="http://www.w3.org/2001/XMLSchema#literal">
                        <xsl:value-of select="description"/>
                    </dcterms:description>
                </xsl:if>
                
                <!-- Link to SVUs -->
                <xsl:for-each select="svus/svu">
                    <excav:hasSVU rdf:resource="{concat($baseUri,  '/svu/', @id)}"/>
                </xsl:for-each>
            </rdf:Description>
        </xsl:for-each>
        
        <!-- Stratigraphic Volume Units -->
        <xsl:for-each select="contexts/context/svus/svu | svus/svu">
            <rdf:Description rdf:about="{concat($baseUri,  '/svu/', @id)}">
                <rdf:type rdf:resource="https://purl.org/megalod/ms/excavation/StratigraphicVolumeUnit"/>
                
                <dcterms:identifier rdf:datatype="http://www.w3.org/2001/XMLSchema#literal">
                    <xsl:value-of select="@id"/>
                </dcterms:identifier>
                
                <xsl:if test="description">
                    <dcterms:description rdf:datatype="http://www.w3.org/2001/XMLSchema#literal">
                        <xsl:value-of select="description"/>
                    </dcterms:description>
                </xsl:if>
                
                <xsl:if test="timeline">
                    <excav:hasTimeline rdf:resource="{concat($baseUri,  '/timeline/', @id, '-timeline')}"/>
                </xsl:if>
            </rdf:Description>
        </xsl:for-each>
        
        <!-- Timelines -->
        <xsl:for-each select="contexts/context/svus/svu[timeline] | svus/svu[timeline]">
            <rdf:Description rdf:about="{concat($baseUri,  '/timeline/', @id, '-timeline')}">
                <rdf:type rdf:resource="https://purl.org/megalod/ms/excavation/TimeLine"/>
                
                <xsl:if test="timeline/beginning">
                    <time:hasBeginning rdf:resource="{concat($baseUri,  '/instant/', @id, '-beginning')}"/>
                </xsl:if>
                
                <xsl:if test="timeline/end">
                    <time:hasEnd rdf:resource="{concat($baseUri,  '/instant/', @id, '-end')}"/>
                </xsl:if>
            </rdf:Description>
        </xsl:for-each>
        
        <!-- Time Instants - Beginning -->
        <xsl:for-each select="contexts/context/svus/svu[timeline/beginning] | svus/svu[timeline/beginning]">
            <rdf:Description rdf:about="{concat($baseUri,  '/instant/', @id, '-beginning')}">
                <rdf:type rdf:resource="https://purl.org/megalod/ms/excavation/Instant"/>
                
                <excav:bcad rdf:resource="{concat('https://purl.org/megalod/kos/MegaLOD-BCAD/', timeline/beginning/era)}"/>
                
                <time:inXSDgYear rdf:datatype="http://www.w3.org/2001/XMLSchema#gYear">
                    <xsl:choose>
                        <xsl:when test="timeline/beginning/era = 'BC'">
                            <xsl:value-of select="concat('-', format-number(timeline/beginning/year, '0000'))"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="format-number(timeline/beginning/year, '0000')"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </time:inXSDgYear>
            </rdf:Description>
        </xsl:for-each>
        
        <!-- Time Instants - End -->
        <xsl:for-each select="contexts/context/svus/svu[timeline/end] | svus/svu[timeline/end]">
            <rdf:Description rdf:about="{concat($baseUri,  '/instant/', @id, '-end')}">
                <rdf:type rdf:resource="https://purl.org/megalod/ms/excavation/Instant"/>
                
                <excav:bcad rdf:resource="{concat('https://purl.org/megalod/kos/MegaLOD-BCAD/', timeline/end/era)}"/>
                
                <time:inXSDgYear rdf:datatype="http://www.w3.org/2001/XMLSchema#gYear">
                    <xsl:choose>
                        <xsl:when test="timeline/end/era = 'BC'">
                            <xsl:value-of select="concat('-', format-number(timeline/end/year, '0000'))"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="format-number(timeline/end/year, '0000')"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </time:inXSDgYear>
            </rdf:Description>
        </xsl:for-each>
    </xsl:template>
</xsl:stylesheet>